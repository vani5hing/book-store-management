Topic 4: Book Store Management

The requirements are: Payment functions for customers, Statistics on revenue, Profits over a specific period of time, and other costs incurred.

I'll analyze for each of those requirements above.

There will be a Main class which merge all the classes needed and run the whole program.

+) Payment functions for customers:
	- Product: interface
		* Methods: addProduct(), removeProduct(), checkProduct().
	- BaseProduct: implements of Product
		* Properties: productID, name, price.
		* Methods: BaseProduct().
	- Book: extends from BaseProduct
		* Properties: author.
		* Methods: Book(), addProduct(), removeProduct(), checkProduct().
	- Stationaries: extends from BaseProduct
		* Properties: category.
		* Methods: Stationary(), addProduct(), removeProduct(), checkProduct().
	- Toy: extends from BaseProduct
		* Properties: type.
		* Methods: Toy(), addProduct(), removeProduct(), checkProduct().
	- Database: data about productions that appear in the store, which are books, stationaries, toys, etc.
		* Methods: addProduct(), removeProduct(), checkProduct().
	- Sale:
		* Properties: saleID, productID, quantity, totalPrice.
		* Methods: Sale(), calculateTotalPrice().
	- Discount:
		* Properties: discountID, discountPercentage, applicableProductType.
		* Methods: Discount(), applyDiscount().
	
+) Statistics on revenue:
	- Revenue: abstract class
		* Properties: totalRevenue.
		* Methods: calculateRevenue(), getTotalRevenue().
	- TotalRevenueOnBooks: extends from Revenue
		* Properties: 
		* Methods: calculateRevenue().
	- TotalRevenueOnStationaries: extends from Revenue
		* Properties: 
		* Methods: calculateRevenue().
	- TotalRevenueOnToys: extends from Revenue
		* Properties: 
		* Methods: calculateRevenue().
	- TotalRevenue: extends from Revenue
		* Properties: 
		* Methods: calculateRevenue().
	
+) Other costs incurred:
	- EmployeeSalary:
		* Properties: employeeID, salary.
		* Methods: EmployeeSalary(), calculateAnnualSalary()
	- ManagerSalary: extends from EmployeeSalary
		* Properties: bonus.
		* Methods: ManagerSalary(), calculateAnnualSalary().

+) Profits over a specific period of time: (Monthly profit)
	- DailyProfit:
		* Properties: revenue, costs.
		* Methods: DailyProfit(), calculateDailyProfit().
	- TotalProfit: 
		* Properties: totalRevenue, totalCosts.
		* Methods: TotalProfit(), calculateTotalProfit().

Requirements stay the same, but some classes, properties or methods could be changed or added in the final project
